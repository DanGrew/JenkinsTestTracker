/*
 * PLGUINS: apply all plugins needed for the build
 */
plugins {
    id "com.jfrog.bintray" version "1.6"
//plugin for making shadow jar
  	id "com.github.johnrengelman.shadow" version "1.2.3"
}

allprojects { 
	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'maven-publish'
	apply plugin: 'eclipse'
//plugin for building applications and jars that can be run
	apply plugin: 'application'
}

/*
 * VERSIONING: describe build and calculate build number
 */
description = """JenkinsTestTracker-Desktop"""
group = 'jtt'

def buildNumberFromEnvironment = System.getenv()[ 'VERSION_NUMBER' ]
def buildNumberForThisEnvironment = ( buildNumberFromEnvironment != null ? buildNumberFromEnvironment : 'WORKSPACE' ) 
version = buildNumberForThisEnvironment

/*
 * SOURCE: source specific configuration
 */
sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
			srcDir 'src'
        }
    }
    test {
        java {
            srcDir 'test'
        }
        resources {
//resources are dotted through the folder - arguably against conventions
			srcDir 'src'
        	srcDir 'test'
        }
    }
}

/*
 * DEPENDENCIES: define repos for resolving and dependencies to resolve
 */
repositories {
     maven { url  "http://dl.bintray.com/dangrew/SystemDigest" }
     maven { url  "http://dl.bintray.com/dangrew/JsonUpgradingPersistenceArchitecture" }
     maven { url  "http://dl.bintray.com/dangrew/JttModel" }
     maven { url  "http://dl.bintray.com/dangrew/JttConnection" }
     maven { url  "http://dl.bintray.com/jerady/FontAwesomeFX/" }
     maven { url "http://repo.maven.apache.org/maven2" }
     jcenter()
}

dependencies {
    compile group: 'org.controlsfx', name: 'controlsfx', version:'8.40.11'
    compile group: 'dom4j', name: 'dom4j', version:'1.6.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.1.2'
    compile group: 'org.json', name: 'json', version:'20151123'
    compile group: 'SystemDigest', name: 'SystemDigest', version: '1.2.52'
    compile group: 'jupa', name: 'JsonUpgradingPersistenceArchitecture', version: '1.1.55'
    compile group: 'jtt', name: 'jtt-model', version: '1.0.2'
    compile group: 'jtt', name: 'jtt-connection', version: '1.0.14'
    compile group: 'de.jensd', name: 'fontawesomefx', version: '8.9'
    
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'pl.pragmatists', name: 'JUnitParams', version:'1.0.5'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version:'1.3'
    testCompile group: 'org.mockito', name: 'mockito-all', version:'1.9.5'
    testCompile group: 'SystemDigest', name: 'SystemDigest', version: '1.2.52', classifier: 'tests'
    testCompile group: 'jtt', name: 'jtt-model', version: '1.0.2', classifier: 'tests'
    testCompile group: 'jtt', name: 'jtt-connection', version: '1.0.14', classifier: 'tests'
}

/*
 * UNIT TESTS: configure reports and scope of tests
 */
test {
    filter {
//test intermingled unit + integ - arguably against conventions
        includeTestsMatching "*Test"
    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    reports {
	    junitXml.enabled = true
	    html.enabled = false
    }
}

/*
 * INTEGRATION TESTS: configure reports and scope of tests
 */
task integrationTests( type: Test ) {
  	filter {
  		includeTestsMatching "*IT"
  	}
  
	testLogging.events = test.testLogging.events
	reports.junitXml.enabled = test.reports.junitXml.enabled
	reports.html.enabled = test.reports.html.enabled
}
check.dependsOn integrationTests

/*
 * TEST PACKAGING: packaging tests
 */
task packageTests(type: Jar) {
  from sourceSets.test.output
  classifier = 'tests'
}
artifacts.archives packageTests

//task to write the version number to the version file
task versioning << {
   File file = new File( "${projectDir}/src/uk/dangrew/jtt/desktop/versioning/VERSION" )
   if ( file.exists() ) {
	   print( file.absolutePath )
	   file.write( version )
   }
}
processResources.dependsOn versioning 

/*
 * SHADOW: configure runnable element
 */
//configure specific name so not '-all'
shadowJar.archiveName = jar.archiveName.replace( '.jar', '-runnable.jar' )
shadowJar.outputs.upToDateWhen { false }
//link to main class in jar
mainClassName = "uk.dangrew.jtt.desktop.main.JenkinsTestTracker"
//bind with jar so that whenever jar is run, shadow is run
jar.dependsOn shadowJar
//automatic distribution options pulled in from application plugin - not interested
distZip.enabled = false
distTar.enabled = false
//publish will fail with above disabled if we do not tell it to ignore them
configurations.archives.with {
    artifacts.remove artifacts.find { it.archiveTask.is distZip }
    artifacts.remove artifacts.find { it.archiveTask.is distTar }
}

/*
 * REMOTE ARCHIVING: publish release candidates to bintray
 */
bintray {
    user = bintrayUser
    key = bintrayKey
    configurations = ['archives']
    publications = ['core', 'runnable']
    
    publish = true //auto publish everything
    
    pkg {
        repo = 'JttDesktop'
        name = 'JttDesktop'
        userOrg = bintrayUser
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/DanGrew/JttDesktop.git'
        
        version {
            name = buildNumberForThisEnvironment
            desc = 'Continuous Delivery rolling version'
            released = new Date()
        }
    }
}

publishing {
    publications {
    	//publish standard core components - jar + tests
        core(MavenPublication) {
        	//publish all items
            from components.java
            
        	//configure description
            groupId group
            artifactId 'jtt-desktop'
            version version
        }
        
        //publish runnable jar
        runnable(MavenPublication) {
        	//publish only the shadow jar
      		artifact ( shadowJar ) { classifier = 'runnable' }
        
        	//configure description of publication
            groupId group
            artifactId 'jtt-desktop'
            version version
    	}
    }
}
